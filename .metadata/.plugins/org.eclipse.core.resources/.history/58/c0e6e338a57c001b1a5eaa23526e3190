package com.tweetapp.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import com.tweetapp.exception.UserNotFoundException;
import com.tweetapp.handler.ConnectionHandler;
import com.tweetapp.model.Login;
import com.tweetapp.model.User;

public class LoginDaoSqlImpl {
	

	public User getUser(String Username) throws ClassNotFoundException, SQLException, UserNotFoundException {
//		String SELECT_USER = "select us_email,us_password from user where us_email =?";
		String SELECT_USER = "select * from user";

		String msg= "User is not available";
		User user = new User();
		 
		 try {
			 Connection connection =  ConnectionHandler.getConnection();
//				 Statement statement = connection.createStatement())
				 PreparedStatement preparedStatement = connection.prepareStatement(SELECT_USER);
//		            preparedStatement.setString(1, Username);
		            ResultSet resultSet = preparedStatement.executeQuery();
		            if(resultSet.next())
		            	resultSet.getString("us_email");
//		            System.out.println(resultSet.getString("us_email"));
		            user.seteMail(resultSet);
		 
			
		 }catch (Exception e) {
			// TODO: handle exception
			 e.printStackTrace();
//			 System.out.println("Caught an error");
		}
		return user;
	
	}

	public void loginUser(Login login) throws ClassNotFoundException {
		// TODO Auto-generated method stub
		   String SELECT_USERS_SQL =  "select us_email, us_password from user" ;
		  

		    try {
		    	
		      Connection connection = ConnectionHandler.getConnection();
		        // Step 2:Create a statement using connection object
		        Statement statement = connection.createStatement() ;
		        ResultSet resultSet=statement.executeQuery(SELECT_USERS_SQL);
		        
		        System.out.println(statement);
		        // Step 3: Execute the query or update query   

		    } catch (SQLException e) {
		        // process sql exception
		    	 printSQLException(e);
//		    	logger.debug("Menu item not found for admin " + e);
		    }

//		    return result;
			}
			 private void printSQLException(SQLException ex) {
			        for (Throwable e: ex) {
			            if (e instanceof SQLException) {
			                e.printStackTrace(System.err);
			                System.err.println("SQLState: " + ((SQLException) e).getSQLState());
			                System.err.println("Error Code: " + ((SQLException) e).getErrorCode());
			                System.err.println("Message: " + e.getMessage());
			                Throwable t = ex.getCause();
			                while (t != null) {
			                    System.out.println("Cause: " + t);
			                    t = t.getCause();
			                }
			            }
			        }
			    }
			
		   
		
		
		


}
